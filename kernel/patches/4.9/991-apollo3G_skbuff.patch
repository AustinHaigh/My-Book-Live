--- a/net/core/skbuff.c	2017-09-27 12:40:05.000000000 +0000
+++ b/linux-4.9.33/net/core/skbuff.c	2017-07-03 15:40:44.114488657 +0000
@@ -1848,7 +1848,7 @@
 /*
  * Fill page/offset/length into spd, if it can hold more pages.
  */
-static bool spd_fill_page(struct splice_pipe_desc *spd,
+static inline bool spd_fill_page(struct splice_pipe_desc *spd,
 			  struct pipe_inode_info *pipe, struct page *page,
 			  unsigned int *len, unsigned int offset,
 			  bool linear,
@@ -1875,7 +1875,7 @@
 	return false;
 }
 
-static bool __splice_segment(struct page *page, unsigned int poff,
+static inline bool __splice_segment(struct page *page, unsigned int poff,
 			     unsigned int plen, unsigned int *off,
 			     unsigned int *len,
 			     struct splice_pipe_desc *spd, bool linear,
@@ -1914,7 +1914,8 @@
  * Map linear and fragment data from the skb to spd. It reports true if the
  * pipe is full or if we already spliced the requested length.
  */
-static bool __skb_splice_bits(struct sk_buff *skb, struct pipe_inode_info *pipe,
+#undef inline
+static inline bool __skb_splice_bits(struct sk_buff *skb, struct pipe_inode_info *pipe,
 			      unsigned int *offset, unsigned int *len,
 			      struct splice_pipe_desc *spd, struct sock *sk)
 {
@@ -1961,6 +1962,7 @@
 
 	return false;
 }
+#define inline		inline		__attribute__((always_inline)) notrace
 
 /*
  * Map data from the skb to a pipe. Should handle both the linear part,
