[global]
  dns proxy = no
  log file = /var/log/samba/log.smbd
;  max log size = 50
  max log size = 5000
;  max smbd processes = 3
  log level = 0

  server role = standalone server
;  os level = 4
;  local master = yes
;  domain master = no
;  preferred master = auto
;  ntlm auth = yes
;  unix extensions = no
;  passdb backend = smbpasswd
  passdb backend = tdbsam
  passwd program = /usr/bin/passwd %u
  passwd chat = *Enter\snew\s*\spassword:* %n\n *Retype\snew\s*\spassword:* %n\n *password\supdated\ssuccessfully* .
  pam password change = yes
;  security = user
;  auth methods = guest, sam_ignoredomain, winbind:ntdomain
;  encrypt passwords = yes  # default
  map to guest = bad user
;  idmap uid = 10000-65000
;  idmap gid = 10000-65000
  dont descend = /proc,/dev,/etc
  admin users =
;  null passwords = yes
  guest account = nobody

# No printers
  load printers = no
  printcap name = /dev/null
  printcap cache time = 0
  disable spoolss = yes
  dead time = 15

# shares defaults
  force create mode = 0660
  force directory mode = 2770
;  force user = demoUser
;  force group = shares
  create mask = 0744
  directory mask = 0775
  case sensitive = auto
  default case = lower
  preserve case = yes
  short preserve case = yes
  hide dot files = no

# performance tuning options
  socket options = TCP_NODELAY IPTOS_LOWDELAY 
  min receivefile size = 2048
  use sendfile = yes
  acl allow execute always = yes
;  acl check permissions = false
; When compiling versions >4.2 you can use SMB3
;  server max protocol = SMB3
; When using the official Debian Jessie version, use:
  server min protocol = SMB2_10
  strict allocate = yes
; oplocks: opportunistic locks, or oplocks, allow clients to cache files locally, improving performance on the order of 30 percent. This option is now enabled by default. For read-only files, the fake oplocks provides the same functionality without actually doing any caching. If you have files that cannot be cached, oplocks can be turned off.
  oplocks = yes
; max xmit: option directly related with the MTU and window size, sets the largest block of data Samba will try to write at any one time
;  max xmit = 65536
  max xmit = 131072
  getwd cache = yes
# write cache size: size in bytes in which Samba will cache writes in memory, note that this is a memory hungry setting, using it on memory constrained systems may result in out of memory situations, normally between 512KB and 2MB are good values, but have to be tested.
;  write cache size = 1048576
  write cache size = 1310720
;  sync always = yes
;  smb2 max read = 16777216 
;  smb2 max write = 16777216
;  smb2 max trans = 16777216
  allocation roundup size = 16777216
# aio read/write size: Samba will read / write from file asynchronously when size of request is bigger than this value. Note that it happens only for non-chained and non-chaining reads and when not using write cache. Note that the maximum is 2048, setting it to anything higher will default back to
read raw = yes
write raw = yes
;  aio read size = 2048
;  aio write size = 2048
; large readwrite: this will have Samba read and write bigger chunks of data from and to the disk, depending on the client this may severely affect performance in a negative way, when using older clients set this to no.
  large readwrite = yes
#aio write behind = *
#aio max threads = 256 #(100 = default)
